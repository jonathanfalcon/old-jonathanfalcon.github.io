---
import { Icon } from 'astro-icon';
import Logo from '~/components/Logo.astro';
import ToggleTheme from '~/components/common/ToggleTheme.astro';
import ToggleMenu from '~/components/common/ToggleMenu.astro';

import { getHomePermalink, getAsset } from '~/utils/permalinks';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface ActionLink extends Link {
  type?: string;
}

interface MenuLink extends Link {
  links?: Array<Link>;
}

export interface Props {
  links?: Array<MenuLink>;
  actions?: Array<ActionLink>;
  isSticky?: boolean;
  showToggleTheme?: boolean;
  showRssFeed?: boolean;
  position?: string;
}

const {
  links = [],
  actions = [],
  isSticky = false,
  showToggleTheme = false,
  showRssFeed = false,
  position = 'center',
} = Astro.props;
---

<header
  class:list={[
    { sticky: isSticky, fixed: !isSticky },
    'top-0 z-40 flex-none mx-auto w-full',
  ]}
  id="header"
>
  <div class="py-2 px-3 md:px-4 mx-auto w-full md:flex md:justify-between max-w-7xl touch-manipulation">
    <div class:list={[{"mr-auto": position === "right"}, "flex justify-between"]}>
      <a class="flex items-center" href={getHomePermalink()}>
        <Logo />
      </a>
      <div class="flex items-center md:hidden">
        {showToggleTheme && <ToggleTheme />}
        <ToggleMenu />
      </div>
    </div>
    <nav
      class="items-center w-full md:w-auto opacity-0 md:opacity-100 h-0 transition-all duration-500 md:flex dark:text-slate-200 md:h-auto overflow-y-auto md:overflow-visible md:mx-5"
      aria-label="Main navigation"
    >
      <ul class="flex flex-col md:flex-row md:self-center w-full md:w-auto md:text-1.5xl text-6xl md:mt-0 mt-2 font-bold">
        {
          links.map(({ text, href, links }) => (
            <li class={links?.length ? 'dropdown' : 'not-dropdown'}>
              {links?.length ? (
                <>
                  <button class="hover:text-gray-900 dark:hover:text-white px-4 pt-2 flex items-center transition duration-150">
                    {text} <Icon name="ph:caret-down-fill" class="w-3.5 h-3.5 ml-0.5 hidden md:inline" />
                  </button>
                  <ul class="dropdown-menu md:backdrop-blur-md dark:md:bg-dark rounded md:absolute pl-4 md:pl-0 md:hidden md:bg-white/90 md:min-w-[200px] drop-shadow-xl md:border-2 dark:border-slate-700">
                    {links.map(({ text: text2, href: href2 }) => (
                      <li class="md:mb-0 mb-1">
                        <a
                          class="first:rounded-t last:rounded-b md:hover:bg-gray-200 dark:hover:bg-gray-700 md:py-2.5 py-1 px-5 block whitespace-no-wrap"
                          href={href2}
                        >
                          {text2}
                        </a>
                      </li>
                    ))}
                  </ul>
                </>
              ) : (
                <a
                  class="dark:text-white px-4 md:py-2 py-5 flex items-center transition duration-150 hover:bg-black/10 dark:hover:bg-white/20 rounded-lg"
                  href={href}
                >
                  {text}
                </a>
              )}
            </li>
          ))
        }
      </ul>
    </nav>
    <div class:list={[{ 'ml-auto': position === 'left' }, 'md:self-center flex items-center md:mb-0']}>
      <div class="hidden items-center md:flex">
        {showToggleTheme && <ToggleTheme iconClass="w-5 h-5" />}

        {
          showRssFeed && (
            <a
              class="text-muted dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 inline-flex items-center"
              aria-label="RSS Feed"
              href={getAsset('/rss.xml')}
            >
              <Icon name="tabler:rss" class="w-5 h-5" />
            </a>
          )
        }
        {
          actions?.length ? (
            <span class="ml-4">
              {actions.map(({ text, href, type }) => (
                <a
                  class:list={[
                    'btn ml-2 py-2.5 px-5.5 md:px-6 font-bold shadow-none text-sm',
                    { 'btn-ghost': type === 'ghost', 'btn-primary': type === 'primary' },
                  ]}
                  href={href}
                >
                  <Fragment set:html={text} />
                </a>
              ))}
            </span>
          ) : (
            ''
          )
        }
      </div>
    </div>
  </div>
</header>

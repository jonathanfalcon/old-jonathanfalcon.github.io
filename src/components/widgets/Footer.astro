---
import { Icon } from 'astro-icon';
import { SITE } from '~/config.mjs';
import { getHomePermalink } from '~/utils/permalinks';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface Links {
  title?: string;
  links: Array<Link>;
}

export interface Props {
  links: Array<Links>;
  secondaryLinks: Array<Link>;
  socialLinks: Array<Link>;
  footNote?: string;
  theme?: string;
}

const { socialLinks = [], secondaryLinks = [], links = [], footNote = '', theme = 'light' } = Astro.props;
---

<footer class:list={[{ dark: theme === 'dark' }, 'relative border-t-2 border-gray-200 dark:border-slate-700']}>
  <div class="relative max-w-7xl mx-auto px-4 sm:px-6">
    <div class="grid grid-cols-12 gap-4 gap-y-8 sm:gap-8 py-8 md:py-12">
      <div class="col-span-12 lg:col-span-4">
        <div class="mb-2">
          <a class="flex items-center font-serif md:text-3xl text-2xl" href={getHomePermalink()}>
            <Icon name="simple-icons:falcon" class="h-7 w-7 mr-2"/>{SITE?.name}
          </a>
        </div>
        <div class="text-sm">
          {
            secondaryLinks.map(({ text, href }) => (
              <a
                class="hover:underline transition duration-150 mr-2"
                href={href}
                set:html={text}
              />
            ))
          }
        </div>
      </div>
      {
        links.map(({ title, links }) => (
          <div class="col-span-6 md:col-span-3 lg:col-span-2">
            <div class="font-bold mb-2">{title}</div>
            {links && Array.isArray(links) && links.length > 0 && (
              <ul class="">
                {links.map(({ text, href, ariaLabel }) => (
                  <li class="mb-2">
                    <a
                      class="text-xl hover:underline transition duration-150"
                      href={href}
                      aria-label={ariaLabel}
                    >
                      <Fragment set:html={text} />
                    </a>
                  </li>
                ))}
              </ul>
            )}
          </div>
        ))
      }
    </div>
    <div class="md:flex md:items-center md:justify-between pb-6 md:pb-8">
      {
        socialLinks?.length ? (
          <ul class="flex mb-4 md:order-1 -ml-2 md:ml-4 md:mb-0">
            {socialLinks.map(({ ariaLabel, href, text, icon }) => (
              <li>
                <a
                  class="text-muted hover:text-spring-green-500 dark:hover:text-spring-green-400 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 inline-flex items-center duration-200 transition"
                  aria-label={ariaLabel}
                  href={href}
                  target="_blank"
                >
                  {icon && <Icon name={icon} class="w-8 h-8" />}
                  <Fragment set:html={text} />
                </a>
              </li>
            ))}
          </ul>
        ) : (
          ''
        )
      }

      <div class="text-sm mr-4 dark:text-slate-400">
        <Fragment set:html={footNote} />
      </div>
    </div>
  </div>
</footer>
